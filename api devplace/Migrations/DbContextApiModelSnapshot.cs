// <auto-generated />
using DevPlace.Blog.API.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevPlace.Blog.API.Migrations
{
    [DbContext(typeof(DbContextApi))]
    partial class DbContextApiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevPlace.Blog.API.Domain.Models.ArticuloBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articulos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Griffin Beak Eldritch",
                            Titulo = "Berry"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Swashbuckler Rye",
                            Titulo = "Nancy"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Ivory Bones Sweet",
                            Titulo = "Eli"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "The Unseen Stafford",
                            Titulo = "Arnold"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Toxic Reyson",
                            Titulo = "Seabury"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Fearless Cloven",
                            Titulo = "Rutherford"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Crow Ridley",
                            Titulo = "Atherton"
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "The Hawk Morris",
                            Titulo = "Huxford"
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Rigger Quye",
                            Titulo = "Dwennon"
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Subtle Asema",
                            Titulo = "Rushford"
                        });
                });

            modelBuilder.Entity("DevPlace.Blog.API.Domain.Models.ComentarioBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.ToTable("Commentarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticuloId = 1,
                            Texto = "Commandeering a Ship Without Getting Caught"
                        },
                        new
                        {
                            Id = 2,
                            ArticuloId = 1,
                            Texto = "Overthrowing Mutiny"
                        },
                        new
                        {
                            Id = 3,
                            ArticuloId = 2,
                            Texto = "Avoiding Brawls While Drinking as Much Rum as You Desire"
                        },
                        new
                        {
                            Id = 4,
                            ArticuloId = 2,
                            Texto = "Singalong Pirate Hits"
                        });
                });

            modelBuilder.Entity("DevPlace.Blog.API.Domain.Models.ComentarioBlog", b =>
                {
                    b.HasOne("DevPlace.Blog.API.Domain.Models.ArticuloBlog", "Articulo")
                        .WithMany("Comentarios")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("DevPlace.Blog.API.Domain.Models.ArticuloBlog", b =>
                {
                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
